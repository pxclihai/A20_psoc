C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBFS_1_DESCR
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBFS_1_descr.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBFS_1_descr.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(
                    -2) PR(.\DP8051_Keil_951\Debug/USBFS_1_descr.lst) CD OT(0,SIZE) OJ(.\DP8051_Keil_951\Debug\USBFS_1_descr.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBFS_1_descr.c
   3          * Version 2.80
   4          *
   5          * Description:
   6          *  USB descriptors and storage.
   7          *
   8          *  Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBFS_1.h"
  18          #include "USBFS_1_pvt.h"
  19          
  20          
  21          /*****************************************************************************
  22          *  User supplied descriptors.  If you want to specify your own descriptors,
  23          *  define USER_SUPPLIED_DESCRIPTORS below and add your descriptors.
  24          *****************************************************************************/
  25          /* `#START USER_DESCRIPTORS_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /***************************************
  31          *  USB Customizer Generated Descriptors
  32          ***************************************/
  33          
  34          #if !defined(USER_SUPPLIED_DESCRIPTORS)
  35          /*********************************************************************
  36          * Device Descriptors
  37          *********************************************************************/
  38          const uint8 CYCODE USBFS_1_DEVICE0_DESCR[18u] = {
  39          /* Descriptor Length                       */ 0x12u,
  40          /* DescriptorType: DEVICE                  */ 0x01u,
  41          /* bcdUSB (ver 2.0)                        */ 0x00u, 0x02u,
  42          /* bDeviceClass                            */ 0x00u,
  43          /* bDeviceSubClass                         */ 0x00u,
  44          /* bDeviceProtocol                         */ 0x00u,
  45          /* bMaxPacketSize0                         */ 0x08u,
  46          /* idVendor                                */ 0xB4u, 0x04u,
  47          /* idProduct                               */ 0x1Du, 0xF2u,
  48          /* bcdDevice                               */ 0x00u, 0x00u,
  49          /* iManufacturer                           */ 0x01u,
  50          /* iProduct                                */ 0x02u,
  51          /* iSerialNumber                           */ 0x80u,
  52          /* bNumConfigurations                      */ 0x01u
  53          };
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 2   

  54          /*********************************************************************
  55          * Config Descriptor  
  56          *********************************************************************/
  57          const uint8 CYCODE USBFS_1_DEVICE0_CONFIGURATION0_DESCR[34u] = {
  58          /*  Config Descriptor Length               */ 0x09u,
  59          /*  DescriptorType: CONFIG                 */ 0x02u,
  60          /*  wTotalLength                           */ 0x22u, 0x00u,
  61          /*  bNumInterfaces                         */ 0x01u,
  62          /*  bConfigurationValue                    */ 0x01u,
  63          /*  iConfiguration                         */ 0x01u,
  64          /*  bmAttributes                           */ 0xC0u,
  65          /*  bMaxPower                              */ 0x00u,
  66          /*********************************************************************
  67          * Interface Descriptor
  68          *********************************************************************/
  69          /*  Interface Descriptor Length            */ 0x09u,
  70          /*  DescriptorType: INTERFACE              */ 0x04u,
  71          /*  bInterfaceNumber                       */ 0x00u,
  72          /*  bAlternateSetting                      */ 0x00u,
  73          /*  bNumEndpoints                          */ 0x01u,
  74          /*  bInterfaceClass                        */ 0x03u,
  75          /*  bInterfaceSubClass                     */ 0x00u,
  76          /*  bInterfaceProtocol                     */ 0x00u,
  77          /*  iInterface                             */ 0x00u,
  78          /*********************************************************************
  79          * HID Class Descriptor
  80          *********************************************************************/
  81          /*  HID Class Descriptor Length            */ 0x09u,
  82          /*  DescriptorType: HID_CLASS              */ 0x21u,
  83          /*  bcdHID                                 */ 0x11u, 0x01u,
  84          /*  bCountryCode                           */ 0x00u,
  85          /*  bNumDescriptors                        */ 0x01u,
  86          /*  bDescriptorType                        */ 0x22u,
  87          /*  wDescriptorLength (LSB)                */ USBFS_1_HID_RPT_1_SIZE_LSB,
  88          /*  wDescriptorLength (MSB)                */ USBFS_1_HID_RPT_1_SIZE_MSB,
  89          /*********************************************************************
  90          * Endpoint Descriptor
  91          *********************************************************************/
  92          /*  Endpoint Descriptor Length             */ 0x07u,
  93          /*  DescriptorType: ENDPOINT               */ 0x05u,
  94          /*  bEndpointAddress                       */ 0x81u,
  95          /*  bmAttributes                           */ 0x03u,
  96          /*  wMaxPacketSize                         */ 0x08u, 0x00u,
  97          /*  bInterval                              */ 0x0Au
  98          };
  99          
 100          /*********************************************************************
 101          * String Descriptor Table
 102          *********************************************************************/
 103          const uint8 CYCODE USBFS_1_STRING_DESCRIPTORS[61u] = {
 104          /*********************************************************************
 105          * Language ID Descriptor
 106          *********************************************************************/
 107          /* Descriptor Length                       */ 0x04u,
 108          /* DescriptorType: STRING                  */ 0x03u,
 109          /* Language Id                             */ 0x09u, 0x04u,
 110          /*********************************************************************
 111          * String Descriptor: "Cypress Semiconductor"
 112          *********************************************************************/
 113          /* Descriptor Length                       */ 0x2Cu,
 114          /* DescriptorType: STRING                  */ 0x03u,
 115           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 3   

 116           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)' ', 0u,(uint8)'S', 0u,(uint8)'e', 0u,
 117           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'c', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 118           (uint8)'d', 0u,(uint8)'u', 0u,(uint8)'c', 0u,(uint8)'t', 0u,(uint8)'o', 0u,
 119           (uint8)'r', 0u,
 120          /*********************************************************************
 121          * String Descriptor: "Mouse"
 122          *********************************************************************/
 123          /* Descriptor Length                       */ 0x0Cu,
 124          /* DescriptorType: STRING                  */ 0x03u,
 125           (uint8)'M', 0u,(uint8)'o', 0u,(uint8)'u', 0u,(uint8)'s', 0u,(uint8)'e', 0u,
 126          /*********************************************************************/
 127          /* Marks the end of the list.              */ 0x00u};
 128          /*********************************************************************/
 129          
 130          /*********************************************************************
 131          * Serial Number String Descriptor
 132          *********************************************************************/
 133          const uint8 CYCODE USBFS_1_SN_STRING_DESCRIPTOR[2] = {
 134          /* Descriptor Length                       */ 0x02u,
 135          /* DescriptorType: STRING                  */ 0x03u,
 136          
 137          };
 138          
 139          /*********************************************************************
 140          * HID Report Descriptor: 3-Button Mouse
 141          *********************************************************************/
 142          const uint8 CYCODE USBFS_1_HIDREPORT_DESCRIPTOR1[58u] = {
 143          /*  Descriptor Size (Not part of descriptor)*/ USBFS_1_HID_RPT_1_SIZE_LSB,
 144          USBFS_1_HID_RPT_1_SIZE_MSB,
 145          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 146          /* USAGE                                   */ 0x09u, 0x02u, 
 147          /* COLLECTION                              */ 0xA1u, 0x01u, 
 148          /* USAGE                                   */ 0x09u, 0x01u, 
 149          /* COLLECTION                              */ 0xA1u, 0x00u, 
 150          /* USAGE_PAGE                              */ 0x05u, 0x09u, 
 151          /* USAGE_PAGE                              */ 0x05u, 0x09u, 
 152          /* USAGE_PAGE                              */ 0x05u, 0x09u, 
 153          /* USAGE_MINIMUM                           */ 0x19u, 0x01u, 
 154          /* USAGE_MAXIMUM                           */ 0x29u, 0x03u, 
 155          /* LOGICAL_MINIMUM                         */ 0x15u, 0x00u, 
 156          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x01u, 
 157          /* REPORT_COUNT                            */ 0x95u, 0x03u, 
 158          /* REPORT_SIZE                             */ 0x75u, 0x01u, 
 159          /* INPUT                                   */ 0x81u, 0x02u, 
 160          /* REPORT_COUNT                            */ 0x95u, 0x01u, 
 161          /* REPORT_SIZE                             */ 0x75u, 0x05u, 
 162          /* INPUT                                   */ 0x81u, 0x01u, 
 163          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 164          /* USAGE                                   */ 0x09u, 0x30u, 
 165          /* USAGE                                   */ 0x09u, 0x31u, 
 166          /* LOGICAL_MINIMUM                         */ 0x15u, 0x81u, 
 167          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x7Fu, 
 168          /* REPORT_SIZE                             */ 0x75u, 0x08u, 
 169          /* REPORT_COUNT                            */ 0x95u, 0x02u, 
 170          /* INPUT                                   */ 0x81u, 0x06u, 
 171          /* END_COLLECTION                          */ 0xC0u, 
 172          /* END_COLLECTION                          */ 0xC0u, 
 173          /*********************************************************************/
 174          /* End of the HID Report Descriptor        */ 0x00u, 0x00u};
 175          /*********************************************************************/
 176          /*********************************************************************
 177          * HID Report Descriptor: 3-Button Mouse
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 4   

 178          *********************************************************************/
 179          const uint8 CYCODE USBFS_1_HIDREPORT_DESCRIPTOR2[54u] = {
 180          /*  Descriptor Size (Not part of descriptor)*/ USBFS_1_HID_RPT_2_SIZE_LSB,
 181          USBFS_1_HID_RPT_2_SIZE_MSB,
 182          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 183          /* USAGE                                   */ 0x09u, 0x02u, 
 184          /* COLLECTION                              */ 0xA1u, 0x01u, 
 185          /* USAGE                                   */ 0x09u, 0x01u, 
 186          /* COLLECTION                              */ 0xA1u, 0x00u, 
 187          /* USAGE_PAGE                              */ 0x05u, 0x09u, 
 188          /* USAGE_MINIMUM                           */ 0x19u, 0x01u, 
 189          /* USAGE_MAXIMUM                           */ 0x29u, 0x03u, 
 190          /* LOGICAL_MINIMUM                         */ 0x15u, 0x00u, 
 191          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x01u, 
 192          /* REPORT_COUNT                            */ 0x95u, 0x03u, 
 193          /* REPORT_SIZE                             */ 0x75u, 0x01u, 
 194          /* INPUT                                   */ 0x81u, 0x02u, 
 195          /* REPORT_COUNT                            */ 0x95u, 0x01u, 
 196          /* REPORT_SIZE                             */ 0x75u, 0x05u, 
 197          /* INPUT                                   */ 0x81u, 0x01u, 
 198          /* USAGE_PAGE                              */ 0x05u, 0x01u, 
 199          /* USAGE                                   */ 0x09u, 0x30u, 
 200          /* USAGE                                   */ 0x09u, 0x31u, 
 201          /* LOGICAL_MINIMUM                         */ 0x15u, 0x81u, 
 202          /* LOGICAL_MAXIMUM                         */ 0x25u, 0x7Fu, 
 203          /* REPORT_SIZE                             */ 0x75u, 0x08u, 
 204          /* REPORT_COUNT                            */ 0x95u, 0x02u, 
 205          /* INPUT                                   */ 0x81u, 0x06u, 
 206          /* END_COLLECTION                          */ 0xC0u, 
 207          /* END_COLLECTION                          */ 0xC0u, 
 208          /*********************************************************************/
 209          /* End of the HID Report Descriptor        */ 0x00u, 0x00u};
 210          /*********************************************************************/
 211          
 212          #if !defined(USER_DEFINE_USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_HID_RPT_STORAGE)
 213          /*********************************************************************
 214          * HID Input Report Storage
 215          *********************************************************************/
 216          T_USBFS_1_XFER_STATUS_BLOCK USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_RPT_SCB;
 217          uint8 USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_BUF[
 218                      USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_BUF_SIZE];
 219          
 220          /*********************************************************************
 221          * HID Input Report TD Table
 222          *********************************************************************/
 223          const T_USBFS_1_TD CYCODE USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_RPT_TABLE[1u] = {
 224              {USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_BUF_SIZE,
 225              &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_BUF[0u],
 226              &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_RPT_SCB},
 227          };
 228          /*********************************************************************
 229          * HID Report Look Up Table         This table has four entries:
 230          *                                        IN Report Table
 231          *                                        OUT Report Table
 232          *                                        Feature Report Table
 233          *                                        HID Report Descriptor
 234          *                                        HID Class Descriptor
 235          *********************************************************************/
 236          const T_USBFS_1_LUT CYCODE USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_TABLE[5u] = {
 237              {0x00u,     &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_IN_RPT_TABLE},
 238              {0x00u,    NULL},
 239              {0x00u,    NULL},
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 5   

 240              {0x01u,     (const void *)&USBFS_1_HIDREPORT_DESCRIPTOR1[0]},
 241              {0x01u,     (const void *)&USBFS_1_DEVICE0_CONFIGURATION0_DESCR[18]}
 242          };
 243          #endif /* USER_DEFINE_USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_HID_RPT_STORAGE */
 244          
 245          /*********************************************************************
 246          * Interface Dispatch Table -- Points to the Class Dispatch Tables
 247          *********************************************************************/
 248          const T_USBFS_1_LUT CYCODE USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_TABLE[1u] = {
 249              {USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_COUNT, 
 250              &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_ALTERNATE0_HID_TABLE}
 251          };
 252          /*********************************************************************
 253          * Endpoint Setting Table -- This table contain the endpoint setting
 254          *                           for each endpoint in the configuration. It
 255          *                           contains the necessary information to
 256          *                           configure the endpoint hardware for each
 257          *                           interface and alternate setting.
 258          *********************************************************************/
 259          const T_USBFS_1_EP_SETTINGS_BLOCK CYCODE USBFS_1_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE[1u] = {
 260          /* IFC  ALT    EPAddr bmAttr MaxPktSize Class ********************/
 261          {0x00u, 0x00u, 0x81u, 0x03u, 0x0008u,   0x03u}
 262          };
 263          const uint8 CYCODE USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE_CLASS[1u] = {
 264          0x03u
 265          };
 266          /*********************************************************************
 267          * Config Dispatch Table -- Points to the Config Descriptor and each of
 268          *                          and endpoint setup table and to each
 269          *                          interface table if it specifies a USB Class
 270          *********************************************************************/
 271          const T_USBFS_1_LUT CYCODE USBFS_1_DEVICE0_CONFIGURATION0_TABLE[4u] = {
 272              {0x01u,     &USBFS_1_DEVICE0_CONFIGURATION0_DESCR},
 273              {0x01u,     &USBFS_1_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE},
 274              {0x01u,     &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE0_TABLE},
 275              {0x00u,     &USBFS_1_DEVICE0_CONFIGURATION0_INTERFACE_CLASS}
 276          };
 277          /*********************************************************************
 278          * Device Dispatch Table -- Points to the Device Descriptor and each of
 279          *                          and Configuration Tables for this Device 
 280          *********************************************************************/
 281          const T_USBFS_1_LUT CYCODE USBFS_1_DEVICE0_TABLE[2u] = {
 282              {0x01u,     &USBFS_1_DEVICE0_DESCR},
 283              {0x01u,     &USBFS_1_DEVICE0_CONFIGURATION0_TABLE}
 284          };
 285          /*********************************************************************
 286          * Device Table -- Indexed by the device number.
 287          *********************************************************************/
 288          const T_USBFS_1_LUT CYCODE USBFS_1_TABLE[1u] = {
 289              {0x01u,     &USBFS_1_DEVICE0_TABLE}
 290          };
 291          
 292          #endif /* USER_SUPPLIED_DESCRIPTORS */
 293          
 294          #if defined(USBFS_1_ENABLE_MSOS_STRING)
 295          
 296              /******************************************************************************
 297              *  USB Microsoft OS String Descriptor
 298              *  "MSFT" identifies a Microsoft host
 299              *  "100" specifies version 1.00
 300              *  USBFS_1_GET_EXTENDED_CONFIG_DESCRIPTOR becomes the bRequest value
 301              *  in a host vendor device/class request
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 6   

 302              ******************************************************************************/
 303          
 304              const uint8 CYCODE USBFS_1_MSOS_DESCRIPTOR[USBFS_1_MSOS_DESCRIPTOR_LENGTH] = {
 305              /* Descriptor Length                       */   0x12u,
 306              /* DescriptorType: STRING                  */   0x03u,
 307              /* qwSignature - "MSFT100"                 */   (uint8)'M', 0u, (uint8)'S', 0u, (uint8)'F', 0u, (uint8
             -)'T', 0u,
 308                                                              (uint8)'1', 0u, (uint8)'0', 0u, (uint8)'0', 0u,
 309              /* bMS_VendorCode:                         */   USBFS_1_GET_EXTENDED_CONFIG_DESCRIPTOR,
 310              /* bPad                                    */   0x00u
 311              };
 312          
 313              /* Extended Configuration Descriptor */
 314          
 315              const uint8 CYCODE USBFS_1_MSOS_CONFIGURATION_DESCR[USBFS_1_MSOS_CONF_DESCR_LENGTH] = {
 316              /*  Length of the descriptor 4 bytes       */   0x28u, 0x00u, 0x00u, 0x00u,
 317              /*  Version of the descriptor 2 bytes      */   0x00u, 0x01u,
 318              /*  wIndex - Fixed:INDEX_CONFIG_DESCRIPTOR */   0x04u, 0x00u,
 319              /*  bCount - Count of device functions.    */   0x01u,
 320              /*  Reserved : 7 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
 321              /*  bFirstInterfaceNumber                  */   0x00u,
 322              /*  Reserved                               */   0x01u,
 323              /*  compatibleID    - "CYUSB\0\0"          */   (uint8)'C', (uint8)'Y', (uint8)'U', (uint8)'S', (uint8
             -)'B',
 324                                                              0x00u, 0x00u, 0x00u,
 325              /*  subcompatibleID - "00001\0\0"          */   (uint8)'0', (uint8)'0', (uint8)'0', (uint8)'0', (uint8
             -)'1',
 326                                                              0x00u, 0x00u, 0x00u,
 327              /*  Reserved : 6 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
 328              };
 329          
 330          #endif /* USBFS_1_ENABLE_MSOS_STRING */
 331          
 332          /* DIE ID string descriptor for 8 bytes ID */
 333          #if defined(USBFS_1_ENABLE_IDSN_STRING)
                  uint8 USBFS_1_idSerialNumberStringDescriptor[USBFS_1_IDSN_DESCR_LENGTH];
              #endif /* USBFS_1_ENABLE_IDSN_STRING */
 336          
 337          
 338          /* [] END OF FILE */
C51 COMPILER V9.51   USBFS_1_DESCR                                                         09/19/2016 16:11:33 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    353    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
